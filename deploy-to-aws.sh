#!/bin/bash

# ๐ ูุดุฑ ุณุฑูุน ูููุดุฑูุน ุนูู AWS EC2
# ููููุฐ ุจุนุฏ ุฅุนุฏุงุฏ ุงูุณูุฑูุฑ

set -e

SERVER_IP="${1:-your-server-ip}"
DOMAIN="${2:-your-domain.com}"
PROJECT_NAME="ep-group"

echo "๐ ุจุฏุก ูุดุฑ EP Group System ุนูู AWS..."
echo "๐ Server IP: $SERVER_IP"
echo "๐ Domain: $DOMAIN"

if [ "$SERVER_IP" = "your-server-ip" ]; then
    echo "โ ูุฑุฌู ุชูุฑูุฑ IP ุงูุณูุฑูุฑ ูุฃูู parameter"
    echo "ุงุณุชุฎุฏุงู: ./deploy-to-aws.sh YOUR_SERVER_IP your-domain.com"
    exit 1
fi

# ========================================
# 1. ุฅุนุฏุงุฏ ุงููุดุฑูุน ูููุดุฑ
# ========================================
echo "๐ฆ ุฅุนุฏุงุฏ ุงููุดุฑูุน ูููุดุฑ..."

# ูุณุฎ config ุงูุฅูุชุงุฌ
echo "โ๏ธ ุชุทุจูู ุฅุนุฏุงุฏุงุช ุงูุฅูุชุงุฌ..."
cp aws-optimized-config.js next.config.js
cp .env.production .env.local

# ุชูุธูู ุงููุดุฑูุน
echo "๐งน ุชูุธูู ุงููุดุฑูุน..."
rm -rf .next
rm -rf node_modules/.cache
rm -rf .turbo

# ุจูุงุก ุงููุดุฑูุน ูุญููุงู ููุชุฃูุฏ
echo "๐จ ุจูุงุก ุงููุดุฑูุน ููุชุญูู..."
NODE_ENV=production npm run build

echo "โ ุงููุดุฑูุน ุฌุงูุฒ ูููุดุฑ!"

# ========================================
# 2. ุฑูุน ุงููุดุฑูุน ููุณูุฑูุฑ
# ========================================
echo "๐ค ุฑูุน ุงููุดุฑูุน ููุณูุฑูุฑ..."

# ุฅูุดุงุก ุฃุฑุดูู ูุถุบูุท (ุจุฏูู node_modules ู .next)
echo "๐ ุฅูุดุงุก ุฃุฑุดูู ุงููุดุฑูุน..."
tar -czf ep-group-deploy.tar.gz \
    --exclude='node_modules' \
    --exclude='.next' \
    --exclude='.git' \
    --exclude='*.log' \
    --exclude='.turbo' \
    --exclude='coverage' \
    --exclude='dist' \
    .

# ุฑูุน ููุณูุฑูุฑ
echo "๐ค ุฑูุน ููุณูุฑูุฑ..."
scp ep-group-deploy.tar.gz ubuntu@$SERVER_IP:/tmp/

# ========================================
# 3. ุชุซุจูุช ุนูู ุงูุณูุฑูุฑ
# ========================================
echo "โ๏ธ ุชุซุจูุช ุนูู ุงูุณูุฑูุฑ..."

ssh ubuntu@$SERVER_IP << EOF
    set -e
    
    echo "๐ ุฅุนุฏุงุฏ ูุฌูุฏ ุงููุดุฑูุน..."
    sudo mkdir -p /home/epgroup/$PROJECT_NAME
    sudo chown -R epgroup:epgroup /home/epgroup
    
    echo "๐ฆ ุงุณุชุฎุฑุงุฌ ุงููุดุฑูุน..."
    cd /home/epgroup
    sudo -u epgroup tar -xzf /tmp/ep-group-deploy.tar.gz -C $PROJECT_NAME
    
    echo "๐ฆ ุชุซุจูุช dependencies..."
    cd /home/epgroup/$PROJECT_NAME
    sudo -u epgroup npm ci --omit=dev --no-audit
    
    echo "๐จ ุจูุงุก ุงููุดุฑูุน ุนูู ุงูุณูุฑูุฑ..."
    sudo -u epgroup NODE_ENV=production npm run build
    
    echo "โ๏ธ ุฅุนุฏุงุฏ ูุชุบูุฑุงุช ุงูุจูุฆุฉ..."
    # ุชุญุฏูุซ NEXTAUTH_URL
    sudo -u epgroup sed -i "s|https://your-domain.com|https://$DOMAIN|g" .env.local
    
    echo "๐ ุจุฏุก ุงูุชุทุจูู ูุน PM2..."
    cd /home/epgroup
    sudo -u epgroup pm2 delete $PROJECT_NAME || true
    sudo -u epgroup pm2 start ecosystem.config.js
    sudo -u epgroup pm2 save
    
    echo "โ ุงูุชุทุจูู ูุนูู ุงูุขู!"
EOF

# ========================================
# 4. ุฅุนุฏุงุฏ Nginx ูุงูDomain
# ========================================
echo "๐ ุฅุนุฏุงุฏ Nginx ูุงูุฏูููู..."

ssh ubuntu@$SERVER_IP << EOF
    set -e
    
    echo "โ๏ธ ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช Nginx..."
    sudo sed -i "s|your-domain.com|$DOMAIN|g" /etc/nginx/sites-available/ep-group
    sudo nginx -t
    sudo systemctl reload nginx
    
    echo "๐ ุฅุนุฏุงุฏ SSL Certificate..."
    sudo certbot --nginx --non-interactive --agree-tos -m admin@$DOMAIN -d $DOMAIN
    
    echo "โ SSL Certificate ุชู ุชุซุจูุชู!"
EOF

# ========================================
# 5. ุงูุชุญูู ูู ุงููุดุฑ
# ========================================
echo "๐ ุงูุชุญูู ูู ุงููุดุฑ..."

ssh ubuntu@$SERVER_IP << 'EOF'
    echo "๐ ุญุงูุฉ ุงููุธุงู:"
    echo "PM2 Status:"
    sudo -u epgroup pm2 status
    
    echo ""
    echo "Memory Usage:"
    free -h
    
    echo ""
    echo "Nginx Status:"
    sudo systemctl status nginx --no-pager -l
    
    echo ""
    echo "Application Health Check:"
    curl -s http://localhost:3000/health || echo "โ Health check failed"
EOF

# ========================================
# 6. ุชูุธูู
# ========================================
echo "๐งน ุชูุธูู ุงููููุงุช ุงููุคูุชุฉ..."
rm -f ep-group-deploy.tar.gz
ssh ubuntu@$SERVER_IP "sudo rm -f /tmp/ep-group-deploy.tar.gz"

echo ""
echo "๐ ุชู ุงููุดุฑ ุจูุฌุงุญ!"
echo ""
echo "๐ ูุนูููุงุช ุงููุดุฑ:"
echo "๐ Website: https://$DOMAIN"
echo "๐ Health Check: https://$DOMAIN/health"
echo "๐ฅ๏ธ  Server IP: $SERVER_IP"
echo ""
echo "๐ ุฃูุงูุฑ ุงููุฑุงูุจุฉ:"
echo "ssh ubuntu@$SERVER_IP 'sudo -u epgroup pm2 status'"
echo "ssh ubuntu@$SERVER_IP 'sudo -u epgroup pm2 logs'"
echo "ssh ubuntu@$SERVER_IP 'tail -f /var/log/system-monitor.log'"
echo ""
echo "๐ฏ ุงูุชุทุจูู ูุนูู ุงูุขู ุนูู AWS Free Tier ุจุฃูุตู ุณุฑุนุฉ!"