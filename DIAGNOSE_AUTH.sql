-- ================================================
-- ุชุดุฎูุต ูุงูู ููุนุฑูุฉ ููู ูุญุตู ุนูู ูุนูููุงุช ุงููุณุชุฎุฏู
-- COMPLETE AUTH DIAGNOSIS
-- ================================================

-- ุงุฎุชุจุงุฑ 1: auth.uid()
SELECT 
    '๐ ุงุฎุชุจุงุฑ auth.uid()' as test,
    auth.uid() as user_id,
    CASE 
        WHEN auth.uid() IS NOT NULL 
        THEN 'โ ูุนูู'
        ELSE 'โ ูุง ูุนูู'
    END as status;

-- ุงุฎุชุจุงุฑ 2: auth.jwt()
SELECT 
    '๐ซ ุงุฎุชุจุงุฑ auth.jwt()' as test,
    auth.jwt() as jwt_full,
    auth.jwt() ->> 'email' as email_from_jwt,
    auth.jwt() ->> 'sub' as sub_from_jwt;

-- ุงุฎุชุจุงุฑ 3: current_setting
SELECT 
    'โ๏ธ ุงุฎุชุจุงุฑ current_setting' as test,
    current_setting('request.jwt.claims', true) as jwt_claims,
    current_setting('request.jwt.claims', true)::json ->> 'email' as email_from_setting;

-- ุงุฎุชุจุงุฑ 4: ุงูุจุญุซ ูู ุฌุฏูู users ุจุงุณุชุฎุฏุงู auth.uid()
SELECT 
    '๐ค ุงูุจุญุซ ูู users ุจุงุณุชุฎุฏุงู auth.uid()' as test,
    u.username,
    u.email,
    u.role,
    u.area,
    u.line
FROM users u
WHERE u.id = auth.uid();

-- ุงุฎุชุจุงุฑ 5: ุนุฑุถ ุฌููุน ุงููุณุชุฎุฏููู
SELECT 
    '๐ ุฌููุน ุงููุณุชุฎุฏููู' as info,
    id,
    username,
    email,
    role,
    area,
    line
FROM users
ORDER BY username;

-- ุงุฎุชุจุงุฑ 6: ุนุฑุถ ุฌููุน ุงูุนูุงุฏุงุช (ุจุฏูู RLS)
SET session_replication_role = replica;

SELECT 
    '๐ฅ ุฌููุน ุงูุนูุงุฏุงุช (RAW)' as info,
    id,
    name,
    area,
    line,
    registered_at
FROM clinics
ORDER BY registered_at DESC
LIMIT 10;

SET session_replication_role = DEFAULT;

-- ุฑุณุงูุฉ ุฎุชุงููุฉ
DO $$ 
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE '๐ ูู ูุถูู ุดุงุฑู ูุชุงุฆุฌ ูุฐู ุงูุงุณุชุนูุงูุงุช';
    RAISE NOTICE '    ุฎุตูุตุงู ูุชูุฌุฉ ุงุฎุชุจุงุฑ 1 ู 2';
    RAISE NOTICE '';
END $$;
